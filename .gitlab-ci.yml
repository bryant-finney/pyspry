# pattern: jobs are generally named according to '{emoji} {function}:{object}[:{category}]'
# pattern: jobs are generally ordered by execution stage; properties are ordered alphabetically
# ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
variables:
  PYSPRY_BRANCH_TAG: $CI_COMMIT_REF_SLUG
  PYSPRY_IMAGE: $CI_REGISTRY_IMAGE/dev:$PYSPRY_TAG
  PYSPRY_TAG: $CI_COMMIT_SHORT_SHA

stages:
  - build
  - lint
  - test
  - deploy

.input-image: &input-image
  image: $PYSPRY_IMAGE

include:
  - local: .gitlab/docker-build.yml
    inputs:
      docker-version: "24"
      platforms: '["linux/amd64", "linux/arm64"]'
      service: dev

  - file: build.yml
    inputs: *input-image
    project: poetry-tools/ci-cd
    ref: main

  - file: check.yml
    inputs: *input-image
    project: poetry-tools/ci-cd
    ref: main

  - file: poethepoet.yml
    inputs:
      <<: *input-image
      poetry-install: "false"
      stage: lint
      task: lint
    project: poetry-tools/ci-cd
    ref: main

  - file: poethepoet.yml
    inputs:
      <<: *input-image
      POETRY_VIRTUALENVS_CREATE: "false"
      before-script: poetry install --only-root
      poetry-install: "false"
      stage: test
      task: test
    project: poetry-tools/ci-cd
    ref: main

🏗️ poetry build: &needs_docker-buildx-bake
  needs: [🏗 docker buildx bake]

✔️ poetry check: *needs_docker-buildx-bake

🪶 poe lint: *needs_docker-buildx-bake

🪶 poe test: *needs_docker-buildx-bake
